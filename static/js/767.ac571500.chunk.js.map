{"version":3,"file":"static/js/767.ac571500.chunk.js","mappings":"sOAEaA,E,OAAqBC,EAAAA,IAAH,4zC,kBCGhB,SAASC,IAAiB,IAAD,IACtC,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAMjB,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcP,GAASQ,KAAKT,EAC7B,GAAE,CAACC,KAECF,EACH,OAAO,KAET,IAAQW,EAAoEX,EAApEW,OAAQC,EAA4DZ,EAA5DY,SAAUC,EAAkDb,EAAlDa,MAAOC,EAA2Cd,EAA3Cc,aAAcC,EAA6Bf,EAA7Be,aAAcC,EAAehB,EAAfgB,YACvDC,EAAM,iBAAGb,QAAH,IAAGA,GAAH,UAAGA,EAAUc,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAGxC,OACE,UAACvB,EAAD,YACE,mBAAQwB,UAAU,SAASC,QAAS,kBAAMf,EAASW,EAAf,EAApC,sBAGA,iBAAKG,UAAU,OAAf,WACE,gBACEE,MAAO,IACPC,IAAG,yCAAoCP,GACvCQ,IAAI,MAEN,iBAAKJ,UAAU,QAAf,WACE,wBAAKP,KACL,0BACE,uCADF,IACqC,GAAfC,EADtB,QAGA,0BACE,qCADF,IACoBF,MAEpB,0BACE,yCADF,IACwBG,KAEvBJ,IACC,iBAAKS,UAAU,SAAf,WACE,mCAAe,IACdT,EAAOc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,cAAGP,UAAU,OAAb,SACGO,GADsBD,EADf,IAIR,cAKZ,mBACA,4BACE,eAAIN,UAAU,cAAd,qCACA,2BACE,yBACE,SAAC,KAAD,CAAMQ,GAAG,OAAOV,MAAO,CAAEC,KAAMF,GAA/B,qBAEF,yBACE,SAAC,KAAD,CAAMW,GAAG,UAAUV,MAAO,CAACC,KAAMF,GAAjC,8BAIN,mBACA,SAAC,KAAD,MAGL,C","sources":["components/MovieDetails/MovieDetailsStyled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MovieDetailsStyled = styled.div`\n//   display: flex;\n  align-items: center;\n//   border-radius: 4px;\n//   text-decoration: none;\n//   color: rgb(114, 208, 252);\n//   &.active {\n//     background-color: rgb(243, 247, 156);\n//     color: (114, 208, 252);\n//   }\n//   :hover:not(.active),\n//   :focus-visible:not(.active) {\n//     color: rgb(243, 247, 156);\n//   }\nbutton{\n  margin: 0px auto 10px 10px;\n  background-color: rgb(114, 208, 252);\n  border-color: rgb(114, 208, 252);\n  color: rgb(38, 38, 36);\n}\n.card{\n  display: flex;\n    margin: 0px 10px 10px 10px;\n}\nimg{\n  margin-right: 10px;\n}\n.right{\ndisplay: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  h2{\n    color: rgb(114, 208, 252);\n  }\n  p{\n    // color: rgb(243, 247, 156);\n  }\n  b{\n    color: rgb(114, 208, 252);\n  }\n  .genres{\n    display: flex;\n    flex-direction: row;\n    align-content: center;\n  }\n  .text{\n    margin: 0px 5px 0px 5px;\n  }\n  .information{\n    text-align: center;\n    color: rgb(114, 208, 252);\n  }\n  ul{\n    // display: flex;\n    // flex-wrap: wrap;\n    padding: 0px;\n}\n  li{\n    list-style: none; \n    margin: 5px auto 0px 10px;\n      // box-shadow: 1px 1px 1px rgb(114, 208, 252), \n      //     4px 4px 4px rgb(114, 208, 252), \n      //     1px 4px 6px rgb(114, 208, 252);\n}\n\n\n`\n\n","import { useEffect, useState } from 'react';\nimport {Outlet, useParams, Link, useLocation, useNavigate} from 'react-router-dom';\nimport { MovieDetailsStyled } from './MovieDetailsStyled';\nimport { DetalisMovies } from '../Services/FetchApi';\n\nexport default function MoviesDetalis() {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    DetalisMovies(movieId).then(setMovieInfo);\n  }, [movieId]);\n  \n  if (!movieInfo) {\n    return null;\n  }\n  const { genres, overview, title, vote_average, release_date, poster_path} = movieInfo;\n  const toBack = location?.state?.from ?? '/';\n\n\n  return (\n    <MovieDetailsStyled>\n      <button className='button' onClick={() => navigate(toBack)} >\n        Go back\n      </button>\n      <div className='card'>\n        <img\n          width={200}\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt=\"\"\n        />\n        <div className='right'>\n          <h2>{title}</h2>\n          <p>\n            <b>User score:</b> {vote_average * 10}%\n          </p>\n          <p>\n            <b>Overview:</b> {overview}\n          </p>\n          <p>\n            <b>Release date:</b> {release_date}\n          </p>\n          {genres && (\n            <div className='genres'>\n              <b>Genres:</b>{' '}\n              {genres.map(({ id, name }) => (\n                <p className='text' key={id}>\n                  {name}\n                </p>\n              ))}{' '}\n            </div>\n          )}\n        </div>\n      </div>\n      <hr />\n      <div >\n        <h4 className='information'>Additional information</h4>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: toBack }}>Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{from: toBack}}>Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <hr />\n      <Outlet />\n    </MovieDetailsStyled>\n  );\n}\n"],"names":["MovieDetailsStyled","styled","MoviesDetalis","useState","movieInfo","setMovieInfo","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","DetalisMovies","then","genres","overview","title","vote_average","release_date","poster_path","toBack","state","from","className","onClick","width","src","alt","map","id","name","to"],"sourceRoot":""}